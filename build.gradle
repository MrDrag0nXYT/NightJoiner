plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'org.jetbrains.kotlin.jvm' version '2.1.0'
}

group = 'zxc.mrdrag0nxyt'
version = '2.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    // PlaceholderAPI
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT")

    compileOnly "com.zaxxer:HikariCP:5.1.0"

    compileOnly "net.kyori:adventure-api:4.17.0"
    compileOnly "net.kyori:adventure-text-serializer-legacy:4.17.0"

    compileOnly "me.clip:placeholderapi:2.11.6"
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation("org.bstats:bstats-bukkit:3.0.2")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveClassifier.set('')
    relocate 'org.bstats', 'zxc.mrdrag0nxyt.org.bstats'

//    dependencies {
//        include(dependency('net.kyori:adventure-text-minimessage'))
//    }

    mergeServiceFiles()
    configurations = [project.configurations.runtimeClasspath]
}

tasks.build {
    dependsOn shadowJar
}
kotlin {
    jvmToolchain(17)
}